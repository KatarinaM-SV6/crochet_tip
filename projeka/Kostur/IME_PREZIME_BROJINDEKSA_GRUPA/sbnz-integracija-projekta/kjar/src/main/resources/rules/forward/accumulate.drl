package forward;

import com.ftn.sbnz.model.models.CrochetPeriod;
import com.ftn.sbnz.model.models.Korisnik;
import com.ftn.sbnz.model.models.Pattern;
import java.time.Duration;
import com.ftn.sbnz.model.models.Stat;
import java.time.LocalDate;

rule "Find hours crocheted past month"
    no-loop true
    when
        $n: Duration() from accumulate(
            $c2: CrochetPeriod(
                $duration: duration,
                date.isAfter(LocalDate.now().minusMonths(1))),
            init(Duration count = Duration.ZERO;),
            action(count = count.plus($duration);),
            reverse(count = count.minus($duration);),
            result(count)
        )
    then
        Stat stat = new Stat("monthly", Integer.valueOf((int) $n.toMinutes()));
        insert(stat);
end

rule "Find hours crocheted past 7 days"
    no-loop true
    when
        $n: Duration() from accumulate(
            $c2: CrochetPeriod(
                $duration: duration,
                date.isAfter(LocalDate.now().minusDays(7))),
            init(Duration count = Duration.ZERO;),
            action(count = count.plus($duration);),
            reverse(count = count.minus($duration);),
            result(count)
        )
    then
        Stat stat = new Stat("weekly", Integer.valueOf((int) $n.toMinutes()));
        insert(stat);
end

rule "Find hours crocheted past 24 hours"
    no-loop true
    when
        $n: Duration() from accumulate(
            $c2: CrochetPeriod(
                $duration: duration,
                date.isAfter(LocalDate.now().minusDays(1))),
            init(Duration count = Duration.ZERO;),
            action(count = count.plus($duration);),
            reverse(count = count.minus($duration);),
            result(count)
        )
    then
        Stat stat = new Stat("daily", Integer.valueOf((int) $n.toMinutes()));
        insert(stat);
end


rule "Find amount of finished patterns"
    no-loop true
    when
        $i: Number() from accumulate(
            $p: Pattern(done == true),
            init(int count = 0;),
            action(count += 1;),
            reverse(count -= 1;),
            result(count)
        )
        $n: Number() from accumulate(
            $p: Pattern(),
            init(int count = 0;),
            action(count += 1;),
            reverse(count -= 1;),
            result(count)
        )
    then
        Stat stat1 = new Stat("done", Integer.valueOf($i.intValue()));
        Stat stat2 = new Stat("n", Integer.valueOf($n.intValue()));

        insert(stat1);
        insert(stat2);
        System.out.println($i + "/" + $n);
end
